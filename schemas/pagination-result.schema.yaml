$schema: "https://json-schema.org/draft/2020-12/schema"
$id: "urn:elation:schemas:pagination-result"
title: PaginationResult
type: object
properties:
  # Functionally, PaginatedResult should be a generic PaginatedResult<T> where results is of 
  # type T[]. But json-schema doesn't support this out of the box, and getting tools to 
  # understand that is even harder. It's expected that any usage of this schema will be 
  # via extension (using the allOf keyword), and overriding the results property. 
  # true effectively acts as an any, which extenders can further constrain while keeping validation correct.
  results: true
  current_page_num:
    description: The current page number based on the given limit and offset.
    type: integer
  next_page_url:
    description: The URL of the next page (normally the current URL with the offset incremented by the limit), if such page exists.  Otherwise null.
    type: string
    nullable: true
    format: uri
  page_first_item_num:
    description: Used by the front end to display "Showing you pets 21-40 of 400".
    type: integer
  page_last_item_num:
    description: Used by the front end to display "Showing you pets 21-40 of 400".
    type: integer
  previous_page_url:
    description: The URL of the previous page, if such page exists.  Otherwise null.
    type: string
    nullable: true
    format: uri
  total_item_count:
    description: Used by the front end to display "Showing you pets 21-40 of 400".
    type: integer
  total_page_count:
    description: The total number of pages based on the given limit and offset.
    type: integer
required:
  - results
  - current_page_num
  - next_page_url
  - page_first_item_num
  - page_last_item_num
  - previous_page_url
  - total_item_count
  - total_page_count
